class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        float mTarget = target - 0.1;
        float lTarget = target + 0.1;
        //find the insert position of two numbers mTarget, lTarget
        //so the range should be [mTarget, lTarget-1]
        
        int left = searchInsert(nums, mTarget);
        int right = searchInsert(nums, lTarget);
        vector<int> result;  
        
        if(left < right)
        {
            result.push_back(left);
            result.push_back(right-1);
        }
        else
        {
            //target not found
            result.push_back(-1);
            result.push_back(-1);
        }
        
        return result;
    }
    
    int searchInsert(vector<int>& nums, float target) {
        
        int p = 0;
        int q = nums.size()-1;
        int mid = 0;
        while( p <= q)
        {
            mid = (p+q)/2;
            if( target > nums[mid])
            {
                p = mid +1;
            }
            else if( target < nums[mid])
            {
                q = mid -1;
            }
            else if( target == nums[mid])
            {
                return mid;
            }
        }
        
        //if we got here, then we don't have a match, find the index
        if( q == -1) return 0;
        
        if(target > nums[q]) return p;
        else return q;
        
        
    }    
};
