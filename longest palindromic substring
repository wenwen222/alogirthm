class Solution {
public:
    string longestPalindrome(string s) {
        
        int start = 0, end = 0;
        int len1, len2;
        int len;
        for( int i =0; i < s.size(); i++)
        {
            len1 = expandFromCenter(s, i, i);
            len2 = expandFromCenter(s, i, i+1);
            
            len = (len1 > len2)?len1:len2;
            
            if ( len > (end -start+1))
            {
                start = i - (len-1)/2;
                end = i + len/2;
            }
        }
        
        return s.substr(start, end-start+1);
        
        
    }
    
    int expandFromCenter(const string& s, int left, int right)
    {
        int L= left, R = right;
        
        while( L>=0 && R<s.size() && s[L] == s[R])
        {
            L--;
            R++;
        }
        
        return R-L-1;
    }
};
