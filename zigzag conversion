class Solution {
public:
    string convert(string s, int numRows) {
        string result;
        if( numRows <= 1 || s.empty() ) return result = s;
      
        
        int r = 0; //round
        int i = 0;
        
        int size = s.size();
        int rows = numRows;
        int rowO = numRows -2 ; //rows of one element
        int rowN = rows + rowO; // elements
        
        int sp = 0;
        int sp1 = 0;
        int sp2 = 0;
        int indice = 1;
        
        for( r = 0; (r < numRows) && (rows > 1); r++)
        {
            i = r;
            
            if( (r ==0 ) || ( r == (rows -1)))
            {
                //first row and last row are slightly different
                    
                sp = rowN;
                sp1 = sp2 = rowN;
            } 
            else
            {  

                sp2 = 2*r;
                sp1 = rowN - 2*r;  
            }

            indice =1;
            
            while ( i < size)
            {
                result.push_back(s[i]);
                
                if( indice == 1)
		        {
                     sp = sp1; indice = 2;
   
                }
                else{
                     sp = sp2; indice = 1;
                }
                i += sp;
            }

        }
        
       return result;     
    }
};
