class Solution {
public:
    vector<string> letterCombinations(string digits) {
        
        std::map<int, string> index;
        
        index.insert(std::make_pair(1, ""));
        index.insert(std::make_pair(2,"abc"));
        index.insert(std::make_pair(3,"def"));
        index.insert(std::make_pair(4,"ghi"));
        index.insert(std::make_pair(5,"jkl"));
        index.insert(std::make_pair(6,"mno"));
        index.insert(std::make_pair(7,"pqrs"));
        index.insert(std::make_pair(8,"tuv"));
        index.insert(std::make_pair(9,"wxyz"));
        index.insert(std::make_pair(0," "));
        
        vector<string> result;
        
        for(int i = 0; i < digits.size(); i++)
        {
            string& tmp = index[digits[i] - '0'];
            insertChar(result, tmp);
        }
        
        return result;
        
    }
    
    void insertChar(vector<string>& result, string& str)
    {
        int size = result.size();
        
        if(size ==0)
        {
            for(int j = 0; j < str.size(); j++)
            {
                string s = "";
                result.push_back(s+str[j]);
            }
        }
        
        for(int i = 0; i < size; i ++ )
        {
            string s = result[i];
            result[i] = s+str[0];
            for(int j = 1; j < str.size(); j++)
            {
                result.push_back(s+str[j]);
            }
        }
        
      
    }
};
